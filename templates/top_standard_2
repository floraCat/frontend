
#规范目的
#基本准则
#前端架构




html
----------------------------------------------
# html基本结构
##
	-文档声明？
	-编码？
	-样式代码或外调style文件在head中引入；不建议在html内设置css样式
	-脚本代码或外调的js文件在head中或body后引入
	-使用退格键缩进代码
##参考模板
	-html基本结构模板
	-模板内容说明：
		* iconfig.js
		* rconfig.js
		* require.js

--------------------

# html标签	
## 标签格式
	-不能省略可选的结束标签，如：</li>,</body>
## 标签使用
	--h1 - 网页主题 / 一个页面只有一个
	--h2 - 大栏目标题 or 楼层标题 等
	--h3 - 小栏目标题
	--h4 - 列表每一条目的标题
	--h5,h6 - 除以上情况的其他如强调加粗等情况适当使用

	--ul+li - 列表最佳搭配
	--p - 描述文字
	--span - 搭配其他元素用以布局标签等，尽量不要用于外容器
## 标签优化
	-页面title不可缺少
	-br/ ??
	-input label ??
	表单控件name属性不能为空？
	为兼容ie8一般情况尽量少用html5新属性标签

# html属性
## 属性格式
	-标签属性值使用双引号，不要使用单引号
	-ID属性在一个页面内是唯一的
	-外调文件如是默认类型不需要声明type??
	-一般情况下不使用内置style
	-合理设置链接的target属性，如：target='_blank' | target='_self' 等
## 属性优化
	-a标签如无链接时其属性href值填充':javascript:;'
	-img标签需要加alt属性 (装饰性的图片或图标不加alt)
	-a链接需要加title属性？
	-页面元信息name为keywords/description等在发布前应添加合适内容

# html文本
	-文本内尽量避免使用实体

# html注释
	-每个大模块都应该注释其栏目名称或相关说明
	-一些整站通用的模块如头部/底部/侧栏等为了更好地区分开来，需要用一对对应的注释包裹起来??
	-嵌套太深或代码太多不好区分各自结束符时，应在容易混淆的结束符后添加注释

# html命名

--------------------

# css基本设置
## 重置样式
## var.less?
## mix.less?
##
	-整站的主色调？
	-css3不用前缀，打包时使用**自动添加前缀

#css格式
	-值为0时后面不加单位
	-颜色值都用小写
	-属性值用单引号，而不是双引号 （推荐：content:'aaa';）
	-每个样式属性后加 ";"
	-尽量用缩写
	-需注释所属栏目或模块标题，跟html对应模块标题一致; 多个模块标题用'&'分隔

#css属性声明顺序

#css优化
	-样式都用class设置，慎用id
	-相同或类似的模块尽量把代码整合重用起来
	-css慎用expression表达式
	--尽量使用css选择器（以防止属性设置冲突，从而减少类名设置，保持结构清晰）
	--如多个元素一并设置，元素之间换一行
	--尽量减少不必要的嵌套层级

# css命名

--------------------

# js基本设置

# js格式
每句语句后的';'不能省略
if、while、for、do语句的执行体总是用"{"和"}"括起来，即使在其结构体内只有一条语句
应该优先使用单引号(‘)，因为字符串可能包含带有双引号(“)的HTML代码
总是使用var声明变量，且要求变量集中在函数开头声明, 避免全局变量的污染

# js优化
js用data-*作为选择器，不用class & id
使用闭包时防止循环引用
尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval() & innerText
避免对象上使用with()
避免数组使用for in

#js 注释
注释尽量详尽且到位
需写明所属页面或栏目
类等脚本文件需添加头描述

# js命名